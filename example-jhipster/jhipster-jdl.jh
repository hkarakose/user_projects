entity Airport {
	id Long,
    name String required
    IataCode String required,
}
relationship ManyToOne { Airport{city} to City }

entity Airplane {
	id Long,
	name String required
    airplaneModelId Long
    airlinesId Long required
}

entity AirplaneModel {
	id Long, model String required
}

entity AirplaneModelSeat {
	id Long, modelId Long, seatNo String required
}

entity Airlines {
	id Long,
    name String required,
    abbreviation String
}

enum Status { NEW, ACTIVE, SUSPENDED, TERMINATED }
entity Flight {
	id Long,
	flightCode String required
    date ZonedDateTime required
    status Status
}
relationship ManyToOne {
	Flight{departure} to Airport,
    Flight{arrival} to Airport,
    Flight{airplane} to Airplane
}

entity FlightSeat {
	id Long,
    seatNo String required,
    availability Boolean
}
relationship ManyToOne {
	FlightSeat{flight} to Flight,
    FlightSeat{owner} to User
}

entity City     { id Long, name String }
relationship ManyToOne { City{country} to Country }

entity Country  { id Long, name String }

relationship OneToMany {
	Airplane{airlinesId} to Airlines,
    Airplane{airplaneModelId} to AirplaneModel
}
relationship OneToMany {
	AirplaneModelSeat{modelId} to AirplaneModel
}

paginate Flight 	with infinite-scroll
paginate Airport 	with pagination
paginate Airplane 	with pagination
paginate City 		with pagination
paginate Country 	with pagination
paginate Airlines 	with pagination
paginate AirplaneModel with pagination

//dto Employee with mapstruct

//service Employee with serviceClass

